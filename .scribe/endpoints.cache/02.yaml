## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Post Management'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/posts
    metadata:
      groupName: 'Post Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new post.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the post.'
        required: true
        example: 'My First Post'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      content:
        name: content
        description: 'The content of the post.'
        required: true
        example: 'This is the content of my first post.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      title: 'My First Post'
      content: 'This is the content of my first post.'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "data": {
              "id": 1,
              "title": "My First Post",
              "content": "This is the content of my first post.",
              "user_id": 1
            },
            "message": "Post created successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "error": "Unauthorized"
          }
        headers: []
        description: ''
        custom: []
    responseFields:
      $.data.id:
        name: $.data.id
        description: 'The ID of the created post.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      $.data.title:
        name: $.data.title
        description: 'The title of the created post.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      $.data.content:
        name: $.data.content
        description: 'The content of the created post.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      $.data.user_id:
        name: $.data.user_id
        description: 'The ID of the user who created the post.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer fve6cg645akbDaP1hdZ8EV3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/posts/{id}'
    metadata:
      groupName: 'Post Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the details of a specific post.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "id": 1,
              "title": "My First Post",
              "content": "This is the content of my first post.",
              "user_id": 1
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": "Post not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields:
      $.data.id:
        name: $.data.id
        description: 'The ID of the post.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      $.data.title:
        name: $.data.title
        description: 'The title of the post.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      $.data.content:
        name: $.data.content
        description: 'The content of the post.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      $.data.user_id:
        name: $.data.user_id
        description: 'The ID of the user who created the post.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z8b61fea3k6hvD5VcPag4dE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/posts/{id}'
    metadata:
      groupName: 'Post Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a specific post.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post to delete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Post deleted successfully",
            "data": {
              "id": 1,
              "title": "My First Post",
              "content": "This is the content of my first post.",
              "user_id": 1
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": "Post not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields:
      $.message:
        name: $.message
        description: 'A message indicating the result of the deletion.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      $.data.id:
        name: $.data.id
        description: 'The ID of the deleted post.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      $.data.title:
        name: $.data.title
        description: 'The title of the deleted post.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      $.data.content:
        name: $.data.content
        description: 'The content of the deleted post.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      $.data.user_id:
        name: $.data.user_id
        description: 'The ID of the user who created the deleted post.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer 83EkZ51P6e4fDba6agvhcVd'
    controller: null
    method: null
    route: null
    custom: []
